<?php

namespace App\Exceptions;

use Core\Error\ErrorBase;
use Core\Error\ErrorUiDialogContentTypeEnum;
use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * The list of the inputs that are never flashed to the session on validation exceptions.
     *
     * @var array<int, string>
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     */
    public function register(): void
    {
        $this->reportable(function (Throwable $e) {
            //
        });
    }

    public function render($request, Throwable $e)
    {
        if ($e instanceof ErrorBase) {
            $extra = $e->extra;

            if($e->extra['ui_dialog_content_type'] === ErrorUiDialogContentTypeEnum::SERVER_RENDERED) {
                $extra['html_content'] = view($e->extra['ui_view'])->render();
                unset($extra['ui_view']);
                unset($extra['ui_dialog_content_type']);
            }

            return response()->json([
                'type' => $e->errorCode,
                'title' => $e->getMessage(),
                'detail' => $e->detail,
                'extra' => $extra
            ], $e->getCode());
        }
        return parent::render($request, $e); // TODO: Change the autogenerated stub
    }
}
